<Query Kind="Statements">
  <Reference>&lt;RuntimeDirectory&gt;\System.Dynamic.dll</Reference>
  <IncludePredicateBuilder>true</IncludePredicateBuilder>
</Query>

//В .NET Framework 4.5 стали доступными 100-ни асинхронных методов,
//к которым можно применять await (i/o)
//Большинство из них следует шаблону TAP асинхронной модели на основе задач 
//(TAP - Task-based Asynchronous Pattern) и предоставляют собой удобную 
//формализацию всего того, что было описано ранее

//Основные моменты TAP

//1. возвращает "горячие" экземпляры Task or Task<TResult>
//2. имеет суффикс "Async" (за исключением комбираторов)
//3. перегружен для приема признака отмены и/или IProgress<T>, если
//поддерживается отмена и/или сообщение о ходе работ
//4. быстро возвращает управление вызывающему коду (корткая начальная 
//synchronous phase)
//5. не всязывает потоки, если является интенсивным вводом выводом