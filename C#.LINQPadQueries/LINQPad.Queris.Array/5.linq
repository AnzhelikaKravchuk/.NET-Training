<Query Kind="Statements" />

//Доступ к элементам одномерного массива с нулевой нижней границей 
//осуществляется немного быстрее, чем доступ к элементам многомерных 
//массивов или массивов с ненулевой нижней границей. Есть несколько 
//причин такому поведению. Во-первых, специальные команды для 
//работы с одномерными массивами с нулевой нижней границей 
//(newarr, ldelem, ldelema, ldlen и stelem) позволяют JIT-компилятору
//генерировать оптимизированный код. При этом предполагаетcя, 
//что первый индекс равен нулю, то есть при доступе к элементам 
//отсутствует необходимость вычислять смещение. Кроме того, в общем 
//случае компилятор умеет выносить код проверки границ за пределы цикла.

int[] vector = new int[5];
vector[3] = 33;
vector.Dump();

int[,] matrix = new int[3, 4];
//Однако эффективность работы с многомерными объектами не так высока, как при работе 
//с одномерными массивами, так как доступ к значениям происходит с помощью функций доступа.
//Это не так медленно, как использование полиморфного варианта Array.GetValue/Array.SetValue,
//но все же менее эффективно, чем работа с одномерным массивом
matrix[1,2] = 34;
matrix.Dump();

int[][] jaggedArray = new int[3][] { new int[5], null, new int[2] };
jaggedArray[0][1] = 35;
jaggedArray.Dump();

int[] tempArray = jaggedArray[0];
tempArray.Dump();
// ... Считываем значение по индексу 1 этого подмассива.
int i = tempArray[1];//int i = tempArray[1];jaggedArray[1] = new int[10];
i.Dump();