<Query Kind="Statements" />

//Компиляторы, ориентированные на платформу.NET, должны генерировать
//код на MSIL, являющемся языком ассемблера некоторой виртуальной машины
//Основные черты архитектуры виртуальной машины MSIL
//- машина является стековой, причем стек является статически типизированным
// в каждой точке программы JIT - compiler должен иметь возможность
//статически определить типы содержимого всех ячеек стека;

//- ячейки стека представлены как 4 - байтовые илиň8 - байтовые знаковые
//целые(обозначаемые как I4 и I8, соответственно, более короткие значения
//представляются как 4-байтовые);

//- стек используется, как правило, только для хранения промежуточных результатов
//вычисления;

//- большинство команд MSIL получают свои аргументы в стеке, удаляют их из стека
//и помещают вместо них результат(ы) вычисления.

//- машина является объектно - ориентированной: структура MSIL отражает разбиение
//кода на классы, методы и т.п.

//команды загрузки:
//• ldc – загрузка константы
//• ldstr <строка> – загрузка строковой константы
//• ldsflda <поле> – загрузка адреса статического поля
//• ldloca <# переменной> – загрузка адреса локальной перменной
//• ldflda <поле> – загрузка адреса поля объекта
//• ldind – косвенная загрузка, берет адрес из стека и помещает
//  
//  на его место значение, размещенное по этому адресу

//Команды выгрузки
//• stind берет из стека адрес значения и само значение и 
//записывает значение по выбранному адресу.
//• команды stloc, stfld, stsfld эквивалентны парам ldxxxa; stind

//Арифметическиекоманды MSIL выполняют вычисления в стеке
//• Вычислительныекоманды(ADD,MUL,SUB...) существуют в знаковом и 
//беззнаковом (.u) вариантах, а также могут выполнять контроль
//за переполнением (.ovf)
//• Крометого,есть логические команды AND,OR, XOR (только знаковые,
//без контроля переполнения) и операции сравнения
//
//Все команды переходов существуют в стандартном и коротком виде 
//(для записи коротких переходов используется суффикс .s). 
//Помимо обычного безусловного перехода (BR), в MSIL 
//существует целый ряд условных переходов (BEQ, BNE, BGT, 
//BRFALSE – переход по false, null или нулю на 
//верхушке стека – и все прочие переходы, включая беззнаковые
//и неупорядоченные варианты).
//
//Существует две основных команды вызова:
//• вызов статического метода (CALL)
//• вызов виртуального метода (CALLVIRT)
//
//Если вызывается метод экземпляра объекта, то объект, которому он
//принадлежит, должен быть первым параметром